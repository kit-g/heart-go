basePath: /
definitions:
  ErrorResponse:
    properties:
      code:
        example: InternalError
        type: string
      error:
        example: An unexpected error occurred
        type: string
    type: object
  Exercise:
    properties:
      asset:
        $ref: '#/definitions/ImageDescription'
      category:
        example: Body weight
        type: string
      instructions:
        example: Keep your body straight and lower yourself until your chest almost
          touches the ground.
        type: string
      name:
        example: Push Up
        type: string
      target:
        example: Chest
        type: string
      thumbnail:
        $ref: '#/definitions/ImageDescription'
    type: object
  ExercisesResponse:
    properties:
      exercises:
        items:
          $ref: '#/definitions/Exercise'
        type: array
    type: object
  ImageDescription:
    properties:
      height:
        example: 100
        type: integer
      link:
        example: https://example.com/image.jpg
        type: string
      width:
        example: 100
        type: integer
    type: object
  Set:
    properties:
      completed:
        example: true
        type: boolean
      distance:
        example: 10
        type: number
      duration:
        example: 10
        type: number
      id:
        example: "1234567890"
        type: string
      reps:
        example: 10
        type: integer
      weight:
        example: 100
        type: number
    required:
    - completed
    - id
    type: object
  SetIn:
    properties:
      completed:
        example: true
        type: boolean
      distance:
        example: 10
        type: number
      duration:
        example: 10
        type: number
      reps:
        example: 10
        type: integer
      weight:
        example: 100
        type: number
    required:
    - completed
    type: object
  Template:
    properties:
      exercises:
        items:
          $ref: '#/definitions/TemplateExercise'
        type: array
      id:
        example: 2ztgx4cIWnxtt95klKnYGGtIfb1
        type: string
      name:
        example: Legs & Shoulders
        type: string
      order:
        example: 1
        type: integer
    type: object
  TemplateExercise:
    properties:
      exercise:
        type: string
      order:
        type: integer
      sets:
        items:
          $ref: '#/definitions/SetIn'
        type: array
    type: object
  TemplateIn:
    properties:
      exercises:
        items:
          $ref: '#/definitions/TemplateExercise'
        type: array
      name:
        type: string
      order:
        type: integer
    type: object
  User:
    properties:
      avatar:
        example: https://example.com/avatar.png
        type: string
      createdAt:
        example: "2025-07-12T12:11:54.450476-04:00"
        type: string
      displayName:
        example: jane_doe
        type: string
      email:
        example: jane_doe@mail.com
        type: string
      id:
        example: HW4beTVvbTUPRxun9MXZxwKPjmC2
        type: string
      updatedAt:
        example: "2025-07-15T12:11:54.450476-04:00"
        type: string
    required:
    - displayName
    - email
    - id
    type: object
  Workout:
    properties:
      end:
        example: "2023-01-01T12:00:00Z"
        type: string
      exercises:
        items:
          $ref: '#/definitions/WorkoutExercise'
        type: array
      id:
        example: 2zsp6iMWgOx9n6qQxZm0GmeXog1
        type: string
      name:
        example: Legs
        type: string
      start:
        example: "2023-01-01T12:00:00Z"
        type: string
    type: object
  WorkoutExercise:
    properties:
      exercise:
        example: Push Up
        type: string
      sets:
        items:
          $ref: '#/definitions/Set'
        type: array
    type: object
  WorkoutExerciseIn:
    properties:
      exercise:
        example: Push Up
        type: string
      order:
        example: 1
        type: integer
      sets:
        items:
          $ref: '#/definitions/SetIn'
        type: array
    required:
    - exercise
    type: object
  WorkoutIn:
    properties:
      end:
        example: "2023-01-01T12:00:00Z"
        type: string
      exercises:
        items:
          $ref: '#/definitions/WorkoutExerciseIn'
        type: array
      id:
        example: 2zsp6iMWgOx9n6qQxZm0GmeXog1
        type: string
      name:
        example: Legs
        type: string
      start:
        example: "2023-01-01T12:00:00Z"
        type: string
    required:
    - exercises
    - id
    - start
    type: object
  WorkoutResponse:
    properties:
      cursor:
        type: string
      workouts:
        items:
          $ref: '#/definitions/Workout'
        type: array
    type: object
host: localhost:8080
info:
  contact:
    name: Kit
    url: https://github.com/kit-g
  description: A simple fitness tracker API
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  termsOfService: http://swagger.io/terms/
  title: Heart of Yours API
  version: "1.0"
paths:
  /accounts:
    post:
      consumes:
      - application/json
      description: Accounts are managed by Firebase so we just need to store them
      operationId: registerAccount
      parameters:
      - description: User request
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/User'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/User'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
      - BearerAuth: []
      summary: Creates an account record
      tags:
      - accounts
  /exercises:
    get:
      consumes:
      - application/json
      description: Returns all exercises in a single page
      operationId: getExercises
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ExercisesResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
      - BearerAuth: []
      summary: List all exercises
      tags:
      - workouts
  /templates:
    get:
      consumes:
      - application/json
      description: Returns all workout templates for the authenticated user
      operationId: getTemplates
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/Template'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
      - BearerAuth: []
      summary: Lists workout templates
      tags:
      - templates
    post:
      consumes:
      - application/json
      description: Validates, saves and returns a workout template
      operationId: makeTemplate
      parameters:
      - description: Template request
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/TemplateIn'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Template'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
      - BearerAuth: []
      summary: Creates a workout template
      tags:
      - templates
  /templates/{id}:
    delete:
      consumes:
      - application/json
      description: Deletes a specific workout template by ID
      operationId: deleteTemplate
      parameters:
      - description: Template ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
      - BearerAuth: []
      summary: Delete workout template
      tags:
      - templates
    get:
      consumes:
      - application/json
      description: Returns a specific workout template by ID
      operationId: getTemplate
      parameters:
      - description: Template ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Template'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get workout template
      tags:
      - templates
  /workouts:
    get:
      consumes:
      - application/json
      description: Returns paginated list of user workouts with exercises and sets
      operationId: getWorkouts
      parameters:
      - description: Page size for pagination
        in: query
        name: pageSize
        type: integer
      - description: Cursor for pagination
        in: query
        name: cursor
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/WorkoutResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
      - BearerAuth: []
      summary: Returns user workouts
      tags:
      - workouts
    post:
      consumes:
      - application/json
      description: Validates, saves and returns a workout
      operationId: makeWorkout
      parameters:
      - description: Workout request
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/WorkoutIn'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Workout'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
      - BearerAuth: []
      summary: Creates a workout
      tags:
      - workouts
  /workouts/{workoutId}:
    delete:
      consumes:
      - application/json
      description: Deletes a workout by ID
      operationId: deleteWorkout
      parameters:
      - description: Workout ID
        in: path
        name: workoutId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
      - BearerAuth: []
      summary: Deletes a workout
      tags:
      - workouts
    get:
      consumes:
      - application/json
      description: Returns a single workout by ID with exercises and sets
      operationId: getWorkout
      parameters:
      - description: Workout ID
        in: path
        name: workoutId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Workout'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
      - BearerAuth: []
      summary: Returns a workout
      tags:
      - workouts
swagger: "2.0"
